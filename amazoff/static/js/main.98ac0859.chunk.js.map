{"version":3,"sources":["serviceWorker.js","config.js","components/Navigation.jsx","components/Account.jsx","components/GenerateItems.jsx","components/Shop.jsx","components/GenerateOrders.jsx","components/Orders.jsx","components/SignIn.jsx","components/CreateAccount.jsx","components/Cart.jsx","components/Product.jsx","components/Error.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","length","user","SearchBar","react_default","a","createElement","type","className","onFocus","Search","placeholder","id","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","_isMounted","setState","state","loggedIn","onAuthStateChanged","firebaseUser","bind","pathname","react_router_dom","to","src","alt","Navigation_SearchBar","Component","withRouter","storeProducts","items","GenerateItems","getCurrentUser","currentUser","addToCart","productKey","quantity","keys","redirect","writeUserData","resetQuantity","handleInputChange","e","name","defineProperty","target","value","products","_this2","productsRef","ref","child","on","snapshot","forEach","product","nextProduct","val","key","parseInt","push","once","then","alert","uid","update","_this3","react_router","map","index","concat","imgUrl","min","max","onHand","onChange","onClick","currency_format_default","price","displayType","thousandSeparator","prefix","decimalScale","fixedDecimalScale","renderText","Shop","components_GenerateItems","rootRef","Account","that","assertThisInitialized","getUserInfo","signOut","customerInfo","shippingAddress","city","country","streetAddress","zip","catch","error","console","log","confirm","remove","u","credentials","EmailAuthProvider","credential","email","reauthenticateWithCredential","delete","updates","newPass","newPassword","confirmPassword","signInWithEmailAndPassword","currentPassword","updatePassword","err","size","defaultValue","htmlFor","updateInfo","changePassword","removeAccount","href","accountOrders","orders","GenerateOrders","stateIsSet","handleOnClick","order","reverse","orderDate","productsInOrder","totalPrice","Orders","components_GenerateOrders","userEmail","userPassword","SignIn","password","signInUser","preventDefault","pass","errorMsg","message","createUser","redirect_createAcc","handlePasswordChange","event","autoComplete","userRepeatPassword","CreateAccount","repeatPass","passwordRepeat","createUserWithEmailAndPassword","handleRepeatPasswordChange","set","cartItems","correspondingProduct","Map","orderTotal","ordersList","Cart","customerCartRef","getCurrentOrders","productQuantity","diff","removeFromCart","calculateOrderTotal","productID","newCart","i","emptyCart","numOfItems","addOrderToAccount","undefined","createNewOrder","changeProductQuantities","currentOnHand","remaining","q","cartItemsObj","date","Date","toDateString","c","current","description","Product","getCurrentProduct","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","params","stop","componentDidMount","Error","App","components_Navigation","path","exact","component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98ac0859.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyCB00wchyxzKiAuC7zD10eS0WSrXEQLVbU\",\n  authDomain: \"cis371semesterproject.firebaseapp.com\",\n  databaseURL: \"https://cis371semesterproject.firebaseio.com\",\n  projectId: \"cis371semesterproject\",\n  storageBucket: \"cis371semesterproject.appspot.com\",\n  messagingSenderId: \"54214005334\"\n};\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as firebase from \"firebase\";\nimport { firebaseConfig } from \"../config\";\nimport { withRouter } from \"react-router-dom\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar searching = false;\nvar user;\n\nconst SearchBar = () => {\n  return (\n    <input\n      type=\"text\"\n      className=\"search\"\n      onFocus={Search}\n      placeholder=\"Search...\"\n    />\n  );\n};\n\nconst Search = () => {\n  return (\n    <div className=\"searchResults\" id=\"searchResults\">\n      <ul>\n        <li>\n          Search not found.\n          <br />\n          <sub>Try another search term.</sub>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      loggedIn: false\n    };\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false;\n    this.setState({ user: user });\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if ((this._isMounted = true)) {\n      firebase.auth().onAuthStateChanged(\n        function(firebaseUser) {\n          user = firebaseUser;\n          if (user) {\n            this.setState({ user: user, loggedIn: true });\n          } else {\n            this.setState({ loggedIn: false });\n          }\n        }.bind(this)\n      );\n    }\n  }\n\n  // rerenders on every click inside the nav\n\n  render() {\n    //console.log(\"logged in state: \" + this.state.loggedIn);\n\n    if (this.state.loggedIn && this.props.location.pathname === \"/\") {\n      return (\n        <nav>\n          <ul>\n            <li>\n              <NavLink to=\"/\">\n                <img\n                  src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\n                  alt=\"logo\"\n                  id=\"logo\"\n                />\n              </NavLink>\n            </li>\n            <SearchBar />\n\n            <div className=\"menuItems\">\n              <div>\n                <li>\n                  <NavLink to=\"/Cart/\">Cart</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/Account/\">Account</NavLink>\n                </li>\n              </div>\n            </div>\n          </ul>\n          {searching ? <Search /> : null}\n        </nav>\n      );\n    }\n\n    if (this.state.loggedIn && this.props.location.pathname !== \"/\") {\n      return (\n        <nav>\n          <ul>\n            <li>\n              <NavLink to=\"/\">\n                <img\n                  src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\n                  alt=\"logo\"\n                  id=\"logo\"\n                />\n              </NavLink>\n            </li>\n\n            <div className=\"menuItems\">\n              <div>\n                <li>\n                  <NavLink to=\"/Cart/\">Cart</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/Account/\">Account</NavLink>\n                </li>\n              </div>\n            </div>\n          </ul>\n          {searching ? <Search /> : null}\n        </nav>\n      );\n    }\n\n    if (!this.state.loggedIn && this.props.location.pathname === \"/\") {\n      return (\n        <nav>\n          <ul>\n            <li>\n              <NavLink to=\"/\">\n                <img\n                  src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\n                  alt=\"logo\"\n                  id=\"logo\"\n                />\n              </NavLink>\n            </li>\n            <SearchBar />\n\n            <div className=\"menuItems\">\n              <div>\n                <li>\n                  <NavLink to=\"/SignIn/\">Sign In</NavLink>\n                </li>\n              </div>\n            </div>\n          </ul>\n          {searching ? <Search /> : null}\n        </nav>\n      );\n    }\n\n    return (\n      <nav>\n        <ul>\n          <li>\n            <NavLink to=\"/\">\n              <img\n                src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\n                alt=\"logo\"\n                id=\"logo\"\n              />\n            </NavLink>\n          </li>\n\n          <div className=\"menuItems\">\n            <div>\n              <li>\n                <NavLink to=\"/SignIn/\">Sign In</NavLink>\n              </li>\n            </div>\n          </div>\n        </ul>\n        {searching ? <Search /> : null}\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Navigation);\n","import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport { Redirect } from \"react-router\";\n\nvar db = firebase.database();\nvar rootRef = db.ref();\nvar user;\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      user: {},\n      name: \"\",\n      shippingAddress: {},\n      city: \"\",\n      country: \"\",\n      state: \"\",\n      streetAddress: \"\",\n      zip: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.getCurrentUser();\n    }\n  }\n\n  getCurrentUser = () => {\n    const that = this;\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        user = firebaseUser;\n        that.setState(\n          {\n            user: user\n          },\n          that.getUserInfo\n        );\n      } else {\n        that.setState(\n          {\n            user: {}\n          },\n          that.signOut\n        );\n      }\n    });\n  };\n\n  getUserInfo = () => {\n    if (user) {\n      var that = this;\n\n      return firebase\n        .database()\n        .ref(\"/customers/\" + this.state.user.uid)\n        .once(\"value\")\n        .then(function(snapshot) {\n          var customerInfo = snapshot.val();\n          that.setState({\n            name: customerInfo.name,\n            shippingAddress: customerInfo.shippingAddress,\n            city: customerInfo.shippingAddress.city,\n            country: customerInfo.shippingAddress.country,\n            state: customerInfo.shippingAddress.state,\n            streetAddress: customerInfo.shippingAddress.streetAddress,\n            zip: customerInfo.shippingAddress.zip\n          });\n        });\n    } else {\n      this.signOut();\n    }\n  };\n\n  handleInputChange = (e, name) => {\n    this.setState({\n      [name]: e.target.value\n    });\n  };\n\n  removeAccount() {\n    var answer = window.confirm(\n      \"Are you sure you want to PERMENANTLY delete account and all user data?\"\n    );\n\n    if (answer === true) {\n      let childRef = rootRef.child(\"customers\").child(this.state.user.uid);\n      childRef.remove();\n\n      let u = firebase.auth().currentUser;\n\n      let credentials = firebase.auth.EmailAuthProvider.credential(\n        this.state.user.email,\n        \"firebase\"\n      );\n      u.reauthenticateWithCredential(credentials);\n\n      u.delete()\n        .then(function() {\n          alert(\"Account Sucessfully deleted\");\n        })\n        .catch(function(error) {\n          alert(\"An error occured - action aborted\" + error);\n        });\n\n      this.setState({ redirect: true });\n    }\n  }\n\n  updateInfo() {\n    console.log(\"updating info for \", this.state.user.email);\n\n    // Write the new post's data simultaneously in the posts list and the user's post list.\n    var updates = {};\n    updates[\"/customers/\" + this.state.user.uid + \"/name/\"] = this.state.name;\n    updates[\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/city\"\n    ] = this.state.city;\n    updates[\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/country\"\n    ] = this.state.country;\n    updates[\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/state\"\n    ] = this.state.state;\n    updates[\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/streetAddress\"\n    ] = this.state.streetAddress;\n    updates[\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/zip\"\n    ] = this.state.zip;\n\n    console.log(\n      firebase\n        .database()\n        .ref()\n        .update(updates)\n    );\n  }\n\n  changePassword() {\n    var newPass = this.state.newPassword;\n\n    if (this.state.newPassword === this.state.confirmPassword) {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(\n          this.state.user.email,\n          this.state.currentPassword\n        )\n        .then(function(user) {\n          firebase\n            .auth()\n            .currentUser.updatePassword(newPass)\n            .then(function() {\n              alert(\"Password updated successfully\");\n            })\n            .catch(function(err) {\n              alert(\"Error: \" + err);\n            });\n        })\n        .catch(function(err) {\n          alert(\"Error: \" + err);\n        });\n    } else {\n      alert(\"New password fields do not match. Please re-enter new password.\");\n    }\n  }\n\n  signOut = () => {\n    const that = this;\n    firebase\n      .auth()\n      .signOut()\n      .then(function() {\n        that.setState({ user: {}, redirect: true });\n      })\n      .catch(function(error) {\n        // An error happened.\n        console.log(error);\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to=\"/\" />;\n    }\n\n    if (user && user.email) {\n      return (\n        <div className=\"main\">\n          <h1 id=\"welcome\">Welcome, {this.state.user.email}!</h1>\n          <h2 id=\"acctInfo\">Account Information</h2>\n          <div id=\"userInfoForm\">\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              size=\"35\"\n              defaultValue={this.state.name}\n              onChange={e => this.handleInputChange(e, \"name\")}\n            />\n            <br />\n            <label htmlFor=\"address\">Street Address:</label>\n            <input\n              type=\"text\"\n              id=\"address\"\n              size=\"35\"\n              defaultValue={this.state.shippingAddress.streetAddress}\n              onChange={e => this.handleInputChange(e, \"streetAddress\")}\n            />\n            <br />\n            <label htmlFor=\"city\">City:</label>\n            <input\n              type=\"text\"\n              id=\"city\"\n              size=\"35\"\n              defaultValue={this.state.shippingAddress.city}\n              onChange={e => this.handleInputChange(e, \"city\")}\n            />\n            <br />\n            <label htmlFor=\"state\">State:</label>\n            <input\n              type=\"text\"\n              id=\"state\"\n              size=\"35\"\n              defaultValue={this.state.shippingAddress.state}\n              onChange={e => this.handleInputChange(e, \"state\")}\n            />\n            <br />\n            <label htmlFor=\"zip\">Zip Code:</label>\n            <input\n              type=\"text\"\n              id=\"zip\"\n              size=\"35\"\n              defaultValue={this.state.shippingAddress.zip}\n              onChange={e => this.handleInputChange(e, \"zip\")}\n            />\n            <br />\n            <label htmlFor=\"country\">Country:</label>\n            <input\n              type=\"text\"\n              id=\"country\"\n              size=\"35\"\n              defaultValue={this.state.shippingAddress.country}\n              onChange={e => this.handleInputChange(e, \"country\")}\n            />\n            <br />\n            <input\n              type=\"submit\"\n              className=\"submit\"\n              value=\"Submit Changes\"\n              onClick={() => {\n                this.updateInfo();\n              }}\n            />\n            <h3 className=\"acctTitles\">Change Your Password</h3>\n            <label htmlFor=\"password\">Current Password:</label>\n            <input\n              type=\"text\"\n              id=\"password\"\n              onChange={e => this.handleInputChange(e, \"currentPassword\")}\n            />\n            <br />\n            <label htmlFor=\"newPassword\">New Password:</label>\n            <input\n              type=\"text\"\n              id=\"newPassword\"\n              onChange={e => this.handleInputChange(e, \"newPassword\")}\n            />\n            <br />\n            <label htmlFor=\"confirmPassword\">Confirm New Password:</label>\n            <input\n              type=\"text\"\n              id=\"confirmPassword\"\n              onChange={e => this.handleInputChange(e, \"confirmPassword\")}\n            />\n            <br />\n            <input\n              type=\"submit\"\n              value=\"Update\"\n              className=\"submit\"\n              onClick={() => {\n                this.changePassword();\n              }}\n            />\n            <h3 className=\"acctTitles\">Delete Account</h3>\n            <input\n              type=\"submit\"\n              value=\"Delete\"\n              className=\"submit\"\n              onClick={() => {\n                this.removeAccount();\n              }}\n            />\n          </div>\n          <div className=\"sidenav\">\n            <a href=\"/Orders\">My Orders</a>\n            <br />\n            <a href=\"/Cart\">Current Cart</a>\n            <p onClick={this.signOut}>Logout</p>\n            <br />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"main\">\n        <p>Loading...</p>\n        <div className=\"sidenav\">\n          <a href=\"/Orders\">My Orders</a>\n          <br />\n          <a href=\"/Cart\">Current Cart</a>\n          <p onClick={this.signOut}>Logout</p>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport { Redirect } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport CurrencyFormat from \"react-currency-format\";\n\nvar storeProducts = [];\nvar items = null;\n\nclass GenerateItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      products: [],\n      user: {},\n      quantity: 1\n    };\n\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.getCurrentUser();\n    }\n    // set up listeners and download data to be rendered to DOM\n    const rootRef = firebase.database().ref(); // ref() points to root node without arguement\n    const productsRef = rootRef.child(\"products\");\n\n    storeProducts = [];\n\n    productsRef.on(\"value\", snapshot => {\n      storeProducts = [];\n      snapshot.forEach(function(product) {\n        // give each object a temporary element containing their key\n        var nextProduct = product.val();\n        nextProduct.key = parseInt(product.key);\n\n        storeProducts.push(nextProduct);\n      });\n\n      if (this._isMounted) {\n        this.setState({\n          products: storeProducts\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  getCurrentUser = () => {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        this.setState({\n          user: firebase.auth().currentUser\n        });\n      }\n    });\n  };\n\n  writeUserData(user, productKey, quantity) {\n    // first check to make sure there is enough remaining before adding it to the cart\n    var quantityRemaining;\n\n    firebase\n      .database()\n      .ref(\"/products/\" + productKey)\n      .child(\"onHand\")\n      .once(\"value\")\n      .then(function(snapshot) {\n        quantityRemaining = snapshot.val();\n\n        if (quantityRemaining < quantity) {\n          alert(\"Not enough remain!\");\n        } else {\n          firebase\n            .database()\n            .ref(\"customers/\" + user.uid)\n            .child(\"cart\")\n            .update({\n              [productKey]: parseInt(quantity, 10)\n            });\n        }\n      });\n  }\n\n  addToCart = (productKey, quantity) => {\n    // if they are not logged in, go to the sign in page\n    if (quantity > 0) {\n      if (this.state.user && Object.keys(this.state.user).length === 0) {\n        this.setState({ redirect: true });\n      } else {\n        // user is logged in. add the item to the cart.\n        this.writeUserData(this.state.user, productKey, quantity);\n        this.resetQuantity();\n      }\n    }\n  };\n\n  resetQuantity() {\n    this.setState({ quantity: 1 });\n  }\n\n  // handle input changed.\n  handleInputChange = (e, name) => {\n    this.setState({\n      [name]: e.target.value\n    });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to=\"/SignIn/\" />;\n    }\n\n    items = null;\n\n    // key could also be product.key\n    items = storeProducts.map((product, index) => (\n      <div key={index} className=\"storeItem\">\n        <div className=\"thumbnailContainer\">\n        <NavLink to={`/Product/${product.key}`}>\n            <img src={product.imgUrl} className=\"thumbnail\" alt=\"\" />\n        </NavLink>\n        </div>\n        <div className=\"itemActions\">\n          <input\n            type=\"number\"\n            min=\"0\"\n            max={product.onHand}\n            value={this.state.quantity}\n            onChange={e => this.handleInputChange(e, \"quantity\")}\n          />\n\n          <button\n            onClick={() => this.addToCart(product.key, this.state.quantity)}\n          >\n            Add to Cart\n          </button>\n          <p className=\"quantityRemaining\">\n            Quantity Remaining: {product.onHand}\n          </p>\n        </div>\n        <div className=\"itemDetails\">\n          <p>\n            <b>{product.name}</b>\n          </p>\n          <CurrencyFormat\n            value={product.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"$\"}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            renderText={value => <div>{value}</div>}\n          />\n        </div>\n      </div>\n    ));\n\n    return <div>{items}</div>;\n  }\n}\n\nexport default GenerateItems;\n","import React from \"react\";\nimport GenerateItems from \"./GenerateItems\";\n/* is used incase we want to render multiple components onto the same page.\neach componenet could be styled and placed on the page.\n*/\n\nconst Shop = () => {\n  return (\n    <div className=\"main\">\n      <GenerateItems />\n    </div>\n  );\n};\n\nexport default Shop;\n","import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport CurrencyFormat from \"react-currency-format\";\n\nvar accountOrders = [];\nvar orders = null;\n\nclass GenerateOrders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      orders: []\n    };\n  }\n\n  getCurrentUser = () => {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        this.setState(\n          {\n            user: firebase.auth().currentUser\n          },\n          this.stateIsSet\n        );\n      }\n    });\n  };\n\n  handleOnClick = () => {\n    // some action...\n    // then redirect\n    this.setState({ redirect: true });\n  };\n\n  // called after rendered to DOM\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.getCurrentUser();\n    }\n\n    this.setState({\n      orders: null\n    });\n\n    accountOrders = [];\n  }\n\n  stateIsSet = () => {\n    // fetch the current items in the cart\n    const rootRef = firebase.database().ref();\n    const ordersRef = rootRef\n      .child(\"customers\")\n      .child(this.state.user.uid)\n      .child(\"orders\");\n\n    ordersRef.on(\"child_added\", snapshot => {\n      var order = snapshot.val();\n\n      accountOrders.push(order);\n\n      this.setState({\n        orders: accountOrders\n      });\n    });\n  };\n\n  render() {\n    if (accountOrders.length > 0) {\n      // display newest orders first\n      accountOrders.reverse();\n\n      orders = accountOrders.map((order, index) => (\n        <div className=\"orderDetails\" key={index}>\n          <div className=\"orderHeader\">Order from {order.orderDate}</div>\n          <ul>\n            {Object.keys(order.productsInOrder).map((product, index) => (\n              <li key={index}>\n                <span className=\"itemName\">{product}</span>\n\n                <CurrencyFormat\n                  value={order.productsInOrder[product]}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  decimalScale={2}\n                  fixedDecimalScale={true}\n                  renderText={value => (\n                    <span className=\"itemPrice\">{value}</span>\n                  )}\n                />\n              </li>\n            ))}\n          </ul>\n          <div className=\"orderPrice\">\n            <CurrencyFormat\n              value={order.totalPrice}\n              displayType={\"text\"}\n              thousandSeparator={true}\n              prefix={\"$\"}\n              decimalScale={2}\n              fixedDecimalScale={true}\n              renderText={value => <div>Total Order Price: {value}</div>}\n            />\n          </div>\n        </div>\n      ));\n\n      return <div>{orders}</div>;\n    } else {\n      return (\n        <div>\n          <h2 id=\"ordersNote\">You have no past orders yet</h2>\n        </div>\n      );\n    }\n  }\n}\n\nexport default GenerateOrders;\n","import React, { Component } from \"react\";\nimport GenerateOrders from \"./GenerateOrders\";\n\n/*const Orders = () => {\n    return (\n        <div className=\"main\">\n            <h2>Past Orders</h2>\n            <GenerateOrders />\n        </div>\n    );\n}; */\n\nclass Orders extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <h2 id=\"pastOrders\">Order History</h2>\n        <GenerateOrders />\n      </div>\n    );\n  }\n}\n\nexport default Orders;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport * as firebase from \"firebase\";\n\nvar userEmail = \"\";\nvar userPassword = \"\";\nvar user = {};\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      user: {},\n      redirect: false,\n      redirect_createAcc: false,\n      errorMsg: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false;\n    this.setState({\n      user: user,\n      email: this.state.email,\n      password: this.state.password\n    });\n  };\n\n  handleInputChange(event) {\n    this.setState({ email: event.target.value }, function() {\n      userEmail = this.state.email;\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value }, function() {\n      userPassword = this.state.password;\n    });\n  }\n\n  signInUser = e => {\n    e.preventDefault();\n    var email = this.state.email;\n    var pass = this.state.password;\n\n    console.log(\"Email: \" + userEmail);\n    console.log(\"Password: \" + userPassword);\n\n    // reset error message\n    this.setState({ errorMsg: \"\" });\n\n    if (email === \"\" || pass === \"\") {\n      this.setState({ errorMsg: \"Please fill all fields.\" });\n    } else {\n      const that = this;\n\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, pass)\n        .catch(function(error) {\n          // Handle Errors here.\n          //var errorCode = error.code;\n          that.setState({ errorMsg: error.message });\n          // ...\n        });\n\n      firebase.auth().onAuthStateChanged(firebaseUser => {\n        if (firebaseUser) {\n          // redirect to new page and update nav\n          console.log(firebaseUser);\n          user = firebaseUser;\n          if (this._isMounted) {\n            this.setState({ redirect: true });\n          }\n        }\n      });\n    }\n  };\n\n  createUser = e => {\n    e.preventDefault();\n    this.setState({ redirect_createAcc: true });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          push\n          to={{\n            pathname: \"/\",\n            state: {\n              user: this.state.user,\n              loggedIn: true\n            }\n          }}\n        />\n      );\n    }\n\n    if (this.state.redirect_createAcc) {\n      return (\n        <Redirect\n          push\n          to={{\n            pathname: \"/CreateAccount/\",\n            state: { email: this.state.email, password: this.state.password }\n          }}\n        />\n      );\n    }\n\n    // error message present\n    if (this.state.errorMsg) {\n      return (\n        <div className=\"main\">\n          <div className=\"sign-up-container\">\n            <form>\n              <input\n                type=\"email\"\n                className=\"field\"\n                id=\"email\"\n                defaultValue={this.state.email}\n                placeholder=\"Email\"\n                onChange={this.handleInputChange}\n                autoComplete=\"email\"\n              />\n              <p className=\"errormsg\" id=\"email_error_1\" />\n              <input\n                type=\"password\"\n                className=\"field\"\n                id=\"password\"\n                defaultValue={this.state.password}\n                placeholder=\"Password\"\n                onChange={this.handlePasswordChange}\n                autoComplete=\"current-password\"\n              />\n              <p className=\"errormsg\" id=\"password_error_1\">\n                {this.state.errorMsg}\n              </p>\n              <div className=\"formButtons\">\n                <button onClick={this.signInUser} className=\"formBtn signIn\">\n                  Sign In\n                </button>\n                <button\n                  onClick={this.createUser}\n                  className=\"formBtn createAccount\"\n                >\n                  Create Account\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"main\">\n        <div className=\"sign-up-container\">\n          <form>\n            <input\n              type=\"email\"\n              className=\"field\"\n              id=\"email\"\n              defaultValue={this.state.email}\n              placeholder=\"Email\"\n              onChange={this.handleInputChange}\n              autoComplete=\"email\"\n            />\n            <p className=\"errormsg\" id=\"email_error_1\" />\n            <input\n              type=\"password\"\n              className=\"field\"\n              id=\"password\"\n              defaultValue={this.state.password}\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n              autoComplete=\"current-password\"\n            />\n            <p className=\"errormsg\" id=\"password_error_1\">\n              <br />\n            </p>\n            <div className=\"formButtons\">\n              <button onClick={this.signInUser} className=\"formBtn signIn\">\n                Sign In\n              </button>\n              <button\n                onClick={this.createUser}\n                className=\"formBtn createAccount\"\n              >\n                Create Account\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport * as firebase from \"firebase\";\n\nvar userEmail = \"\";\nvar userPassword = \"\";\nvar userRepeatPassword = \"\";\n\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordRepeat: \"\",\n      redirect: false,\n      errorMsg: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleRepeatPasswordChange = this.handleRepeatPasswordChange.bind(\n      this\n    );\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.setState({\n        email: this.props.location.state.email,\n        password: this.props.location.state.password\n      });\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({ email: event.target.value }, function() {\n      userEmail = this.state.email;\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value }, function() {\n      userPassword = this.state.password;\n    });\n  }\n\n  handleRepeatPasswordChange(event) {\n    this.setState({ passwordRepeat: event.target.value }, function() {\n      userRepeatPassword = this.state.passwordRepeat;\n    });\n  }\n\n  // creates a customer account for them using their unique user id\n  // this can hold their cart, orders, info, etc.\n  writeUserData(user) {\n    firebase\n      .database()\n      .ref(\"customers/\" + user.uid)\n      .set({\n        email: user.email,\n        name: \"\",\n        shippingAddress: {\n          streetAddress: \"\",\n          city: \"\",\n          state: \"\",\n          zip: \"\",\n          country: \"\"\n        }\n      });\n  }\n\n  createUser = e => {\n    e.preventDefault();\n\n    var email = this.state.email;\n    var pass = this.state.password;\n    var repeatPass = this.state.passwordRepeat;\n\n    console.log(\"Email: \" + userEmail);\n    console.log(\"Password: \" + userPassword);\n    console.log(\"Repeat Password: \" + userRepeatPassword);\n\n    // reset error message\n    this.setState({ errorMsg: \"\" });\n\n    if (email === \"\" || pass === \"\" || repeatPass === \"\") {\n      this.setState({ errorMsg: \"Please fill all fields.\" });\n    } else if (pass !== repeatPass) {\n      this.setState({ errorMsg: \"Passwords do not match.\" });\n    } else {\n      const that = this;\n\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, pass)\n        .catch(function(error) {\n          // Handle Errors here.\n          that.setState({ errorMsg: error.message });\n          // ...\n        });\n\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          user = firebase.auth().currentUser;\n\n          // save a space for them in the realtime database\n          this.writeUserData(user);\n        }\n      });\n\n      firebase.auth().onAuthStateChanged(firebaseUser => {\n        if (firebaseUser) {\n          console.log(firebaseUser);\n          if (this._isMounted) {\n            this.setState({ redirect: true });\n          }\n        }\n      });\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to=\"/Account/\" />;\n    }\n\n    // if an error message is present\n    if (this.state.errorMsg) {\n      return (\n        <div className=\"main\">\n          <div className=\"sign-up-container\">\n            <form>\n              <input\n                type=\"email\"\n                className=\"field\"\n                id=\"email\"\n                defaultValue={this.props.location.state.email}\n                placeholder=\"Email\"\n                onChange={this.handleInputChange}\n                autoComplete=\"email\"\n              />\n              <p className=\"errormsg\" id=\"email_error_1\" />\n              <input\n                type=\"password\"\n                className=\"field\"\n                id=\"password\"\n                defaultValue={this.props.location.state.password}\n                placeholder=\"Password\"\n                onChange={this.handlePasswordChange}\n                autoComplete=\"current-password\"\n              />\n              <p className=\"errormsg\" id=\"password_error_1\" />\n              <input\n                type=\"password\"\n                className=\"field\"\n                id=\"repeat_password\"\n                defaultValue=\"\"\n                placeholder=\"Repeat Password\"\n                onChange={this.handleRepeatPasswordChange}\n                autoComplete=\"current-password\"\n              />\n              <p className=\"errormsg\" id=\"password_error_1\">\n                {this.state.errorMsg}\n              </p>\n              <div className=\"formButtons\">\n                <button\n                  onClick={this.createUser}\n                  className=\"formBtn createAccount\"\n                >\n                  Create Account\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"main\">\n        <div className=\"sign-up-container\">\n          <form>\n            <input\n              type=\"email\"\n              className=\"field\"\n              id=\"email\"\n              defaultValue={this.props.location.state.email}\n              placeholder=\"Email\"\n              onChange={this.handleInputChange}\n              autoComplete=\"email\"\n            />\n            <p className=\"errormsg\" id=\"email_error_1\" />\n            <input\n              type=\"password\"\n              className=\"field\"\n              id=\"password\"\n              defaultValue={this.props.location.state.password}\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n              autoComplete=\"current-password\"\n            />\n            <p className=\"errormsg\" id=\"password_error_1\" />\n            <input\n              type=\"password\"\n              className=\"field\"\n              id=\"repeat_password\"\n              defaultValue=\"\"\n              placeholder=\"Repeat Password\"\n              onChange={this.handleRepeatPasswordChange}\n              autoComplete=\"current-password\"\n            />\n            <p className=\"errormsg\" id=\"password_error_1\">\n              <br />\n            </p>\n            <div className=\"formButtons\">\n              <button\n                onClick={this.createUser}\n                className=\"formBtn createAccount\"\n              >\n                Create Account\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateAccount;\n","import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport { Redirect } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport CurrencyFormat from \"react-currency-format\";\n\nvar cartItems = [];\nvar correspondingProduct = {};\nvar items = new Map();\nvar orderTotal = 0.0;\nvar newOrder = {};\nvar ordersList = [];\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      user: {},\n      cartItems: [],\n      orderTotal: 0.0,\n      orders: []\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.getCurrentUser();\n    }\n  }\n\n  getCurrentUser = () => {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        this.setState(\n          {\n            user: firebase.auth().currentUser\n          },\n          this.stateIsSet\n        );\n      }\n    });\n  };\n\n  stateIsSet = () => {\n    // fetch the current items in the cart\n    const rootRef = firebase.database().ref();\n    const customerCartRef = rootRef\n      .child(\"customers\")\n      .child(this.state.user.uid)\n      .child(\"cart\");\n\n    cartItems = [];\n    this.getCurrentOrders();\n\n    customerCartRef.on(\"child_added\", snapshot => {\n      var productKey = snapshot.key;\n      var productQuantity = snapshot.val();\n\n      var that = this;\n\n      // get the product matching this key\n      firebase\n        .database()\n        .ref(\"/products/\")\n        .child(productKey)\n        .once(\"value\")\n        .then(function(snapshot) {\n          correspondingProduct = snapshot.val();\n          correspondingProduct.key = productKey;\n          correspondingProduct.quantity = productQuantity;\n          console.log(correspondingProduct);\n\n          // if any items are in the cart that have a quantity less than what remains\n          if (\n            correspondingProduct.onHand < productQuantity &&\n            correspondingProduct.onHand > 0\n          ) {\n            let diff = productQuantity - correspondingProduct.onHand;\n\n            if (diff === 1) {\n              alert(\n                diff +\n                  ' \"' +\n                  correspondingProduct.name +\n                  '\" was removed from the cart. Not enough remain.'\n              );\n            } else {\n              alert(\n                diff +\n                  ' \"' +\n                  correspondingProduct.name +\n                  '\"s were removed from the cart. Not enough remain.'\n              );\n            }\n\n            cartItems.push([\n              productKey,\n              correspondingProduct.onHand,\n              correspondingProduct\n            ]);\n\n            // update firebase to the new quantity remaining\n            var updates = {};\n            updates[\n              \"/customers/\" + that.state.user.uid + \"/cart/\" + productKey\n            ] = correspondingProduct.onHand;\n\n            firebase\n              .database()\n              .ref()\n              .update(updates);\n          } else if (correspondingProduct.onHand <= 0) {\n            alert(\n              correspondingProduct.name +\n                \" was removed from the cart. None remain.\"\n            );\n\n            // delete the item from the cart since none remain\n            that.removeFromCart(productKey);\n          } else {\n            // add it normally\n            cartItems.push([productKey, productQuantity, correspondingProduct]);\n          }\n\n          that.setState(\n            {\n              cartItems: cartItems\n            },\n            that.calculateOrderTotal()\n          );\n        });\n    });\n  };\n\n  removeFromCart = productID => {\n    // if they are not logged in, go to the sign in page\n    // keep the reference to what THIS is\n    var that = this;\n\n    var adaRef = firebase\n      .database()\n      .ref(\"customers/\" + this.state.user.uid + \"/cart/\" + productID);\n    adaRef\n      .remove()\n      .then(function() {\n        // successfully removed\n\n        // now update the cart list\n        var newCart = [];\n        for (var i = 0; i < cartItems.length; i++) {\n          if (cartItems[i][0] !== productID) {\n            newCart.push(cartItems[i]);\n          }\n        }\n\n        cartItems = newCart;\n        newCart = [];\n        correspondingProduct = {};\n\n        // update the state so that the cart refreshes\n        that.setState(\n          {\n            cartItems: cartItems\n          },\n          that.calculateOrderTotal\n        );\n      })\n      .catch(function(error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n  };\n\n  emptyCart = () => {\n    // if they are not logged in, go to the sign in page\n    // keep the reference to what THIS is\n    var that = this;\n\n    var adaRef = firebase\n      .database()\n      .ref(\"customers/\" + this.state.user.uid + \"/cart/\");\n    adaRef\n      .remove()\n      .then(function() {\n        // successfully removed entire cart\n\n        // now update the cart list\n        cartItems = [];\n        correspondingProduct = {};\n\n        // update the state so that the cart refreshes\n        that.setState(\n          {\n            cartItems: []\n          },\n          that.calculateOrderTotal\n        );\n      })\n      .catch(function(error) {\n        console.log(\"Remove all failed: \" + error.message);\n      });\n  };\n\n  calculateOrderTotal = () => {\n    // loop through all cart items\n    orderTotal = 0;\n\n    var numOfItems = cartItems.length;\n    for (var i = 0; i < numOfItems; i++) {\n      let price = cartItems[i][2].price;\n      let quantity = parseInt(cartItems[i][1]);\n      orderTotal += price * quantity;\n    }\n\n    this.setState({\n      orderTotal: orderTotal\n    });\n  };\n\n  getCurrentOrders = () => {\n    // need to get their name and shipping address\n    var that = this;\n\n    firebase\n      .database()\n      .ref(\"/customers/\" + this.state.user.uid)\n      .once(\"value\")\n      .then(function(snapshot) {\n        var customerInfo = snapshot.val();\n\n        // save locally\n        ordersList = customerInfo.orders;\n\n        that.setState({\n          orders: customerInfo.orders\n        });\n      });\n  };\n\n  createNewOrder() {\n    var cartItemsObj = {};\n    var date = new Date();\n\n    date = date.toDateString();\n\n    for (var c = 0; c < cartItems.length; ++c) {\n      var current = cartItems[c];\n      cartItemsObj[current[2].name] = current[2].price;\n    }\n\n    newOrder = {\n      orderDate: date,\n      productsInOrder: cartItemsObj,\n      totalPrice: this.state.orderTotal\n    };\n\n    return newOrder;\n  }\n\n  addOrderToAccount = () => {\n    if (this.state.cartItems.length > 0) {\n      if (this.state.orders === undefined) {\n        ordersList = [];\n      }\n\n      ordersList.push(this.createNewOrder());\n\n      this.setState({\n        orders: ordersList\n      });\n\n      var updates = {};\n      updates[\"/customers/\" + this.state.user.uid + \"/orders/\"] = ordersList;\n\n      firebase\n        .database()\n        .ref()\n        .update(updates);\n\n      alert(\"Order completed successfully. Thank you for your business!\");\n      this.changeProductQuantities();\n      this.emptyCart();\n    }\n  };\n\n  changeProductQuantities = () => {\n    var updates = {};\n    var currentOnHand = 0;\n    var productKey = 0;\n    var productQuantity = 0;\n    var remaining = 0;\n\n    firebase\n      .database()\n      .ref(\"/products/\")\n      .once(\"value\")\n      .then(function(snapshot) {\n        for (let q = 0; q < cartItems.length; ++q) {\n          currentOnHand = cartItems[q][2].onHand;\n          productQuantity = cartItems[q][2].quantity;\n          productKey = cartItems[q][0];\n\n          remaining = currentOnHand - productQuantity;\n\n          updates[\"/products/\" + productKey + \"/onHand/\"] = remaining;\n        }\n\n        firebase\n          .database()\n          .ref()\n          .update(updates);\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to=\"/SignIn/\" />;\n    }\n\n    // ERROR: keys are showing as duplicates if a cart item is deleted\n    // and added back in without refreshing the page\n    items = cartItems.map(product => (\n      <tr key={product[0]}>\n        <NavLink to={`/Product/${product[0]}`}>\n          <td>\n            <img src={product[2].imgUrl} className=\"thumbnail\" alt=\"\" />\n          </td>\n        </NavLink>\n        <td>{product[2].name}</td>\n        <td>{product[2].description}</td>\n        <td>{product[1]}</td>\n        <td>\n          <CurrencyFormat\n            value={product[2].price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"$\"}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            renderText={value => <div>{value}</div>}\n          />\n        </td>\n        <td>\n          <button\n            onClick={() => this.removeFromCart(product[0])}\n            className=\"checkoutBtn\"\n          >\n            Remove\n          </button>\n        </td>\n      </tr>\n    ));\n\n    return (\n      <div className=\"main\">\n        <button\n          className=\"checkoutBtn\"\n          onClick={() => this.addOrderToAccount()}\n        >\n          Proceed to Checkout\n        </button>\n        <table>\n          <tbody>\n            <tr>\n              <th>Image</th>\n              <th>Item Name</th>\n              <th>Description</th>\n              <th>Quantity</th>\n              <th>Price</th>\n              <th>Action</th>\n            </tr>\n            {items}\n            <tr>\n              <td />\n              <td />\n              <td />\n              <td />\n              <td>\n                <p>\n                  <b>Order Total:</b>\n                </p>\n                <CurrencyFormat\n                  value={this.state.orderTotal}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  decimalScale={2}\n                  fixedDecimalScale={true}\n                  renderText={value => <div>{value}</div>}\n                />\n              </td>\n              <td>\n                {\" \"}\n                <button\n                  onClick={() => this.emptyCart()}\n                  className=\"checkoutBtn emptyCartBtn\"\n                >\n                  Empty Cart\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: 0,\n      product: {}\n    };\n  }\n\n  //returns a product as a promise\n  getCurrentProduct = async () => {\n    //reference to firebase db\n    const rootRef = firebase.database().ref();\n    //reference to products collection\n    const productsRef = rootRef.child(\"products\");\n    //reference to the single product\n    const productRef = productsRef.child(this.props.match.params.key);\n\n    //calls on the product once and sets the props\n    productRef.once(\"value\").then(snapshot => {\n      console.log(snapshot.val());\n      this.setState({\n        product: {\n          description: snapshot.child(\"description\").val(),\n          name: snapshot.child(\"name\").val(),\n          imgUrl: snapshot.child(\"imgUrl\").val(),\n          onHand: snapshot.child(\"onHand\").val(),\n          price: snapshot.child(\"price\").val()\n        }\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    this.getCurrentProduct();\n  };\n\n  render() {\n    console.log(this.state.product); //prints out an empty object + the product\n    //if the product has not loaded, this div will be shown\n    if (this.state.product === {}) {\n      return (\n        <div>\n          <p>Loading Product</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"product-container\">\n          <div className=\"product-image-container\">\n            <h1>{this.state.product.name}</h1>\n            <img\n              src={this.state.product.imgUrl}\n              className=\"largeImage\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"product-description\">\n            <p>Quantity Remaining: {this.state.product.onHand}</p>\n            <p>Price: ${this.state.product.price}</p>\n            <p>{this.state.product.description}</p>\n          </div>\n        </div>\n      );\n    }\n    //Once firebase gets the product information, it will be rendered here\n  }\n}\n\nexport default Product;\n","import React from \"react\";\n\nconst Error = () => {\n  return (\n    <div className=\"main\">\n      <h2>Error</h2>\n      <p>Something went wrong!</p>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport Shop from \"./components/Shop\";\nimport Account from \"./components/Account\";\nimport Orders from \"./components/Orders\";\nimport SignIn from \"./components/SignIn\";\nimport CreateAccount from \"./components/CreateAccount\";\nimport Cart from \"./components/Cart\";\nimport Product from \"./components/Product\";\nimport Error from \"./components/Error\";\n\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" exact component={Shop} />\n            <Route path=\"/Cart/\" component={Cart} />\n            <Route path=\"/Account/\" component={Account} />\n            <Route path=\"/Orders/\" component={Orders} />\n            <Route path=\"/SignIn/\" component={SignIn} />\n            <Route path=\"/CreateAccount/\" component={CreateAccount} />\n            <Route path=\"/Product/:key\" component={Product} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase\";\nimport { firebaseConfig } from \"./config\";\nimport App from \"./App\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}